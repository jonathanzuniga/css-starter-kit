@import '../partials/_all';


/***
 * Drawer:
 */

/**
 * Standard drawer:
 *
 *     @example
 *     div.drawer-wrapper
 *         input(type='checkbox', id='eg-drawer-top').drawer-toggle.drawer-toggle--top
 *         input(type='checkbox', id='eg-drawer-right').drawer-toggle.drawer-toggle--right
 *         input(type='checkbox', id='eg-drawer-bottom').drawer-toggle.drawer-toggle--bottom
 *         input(type='checkbox', id='eg-drawer-left').drawer-toggle.drawer-toggle--left
 *         div.doc-drawer.drawer.drawer--top
 *             div
 *                 label(for='eg-drawer-top').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--right
 *             div
 *                 label(for='eg-drawer-right').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--bottom
 *             div
 *                 label(for='eg-drawer-bottom').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--left
 *             div
 *                 label(for='eg-drawer-left').btn.btn--link Close
 *         div.doc-drawer-overlay.drawer-overlay
 *         div.doc-drawer-outside.drawer-outside
 *             div.txt-center
 *                 div.btn-group
 *                     label(for='eg-drawer-top').btn.btn--secondary Top
 *                     label(for='eg-drawer-right').btn.btn--secondary Right
 *                     label(for='eg-drawer-bottom').btn.btn--secondary Bottom
 *                     label(for='eg-drawer-left').btn.btn--secondary Left
 */
.drawer-wrapper {
	overflow: hidden;
	position: relative;
}

.drawer {
	background-color: $drawer-background-color;
	display: block;
	// opacity: 0;
	position: fixed;
	// visibility: hidden;
	width: $drawer-width;
	z-index: $drawer-z-index;
}

.night {
	.drawer {
		background-color: $night-drawer-background-color;
	}
}

.drawer--top,
.drawer--bottom {
	height: $drawer-height;
	width: 100%;
}

.drawer--top {
	margin-top: -#{$drawer-height};

	top: 0;
	right: 0;
	left: 0;
}

.drawer--right {
	margin-right: -#{$drawer-width};
	
	top: 0;
	right: 0;
	bottom: 0;
}

.drawer--bottom {
	margin-bottom: -#{$drawer-height};

	right: 0;
	bottom: 0;
	left: 0;
}

.drawer--left {
	margin-left: -#{$drawer-width};
	
	top: 0;
	bottom: 0;
	left: 0;
}

.drawer,
.drawer ~ .drawer-outside {
	transition: $drawer-outside-transition;
}

.drawer-outside {
	transform: none;
}

.drawer-overlay {
	background-color: $drawer-overlay-background-color;
	cursor: pointer;
	overflow: hidden;
	
	position: fixed;
	top: 0;
	left: 0;

	width: 100%;
	height: 100%;

	opacity: 0;
	visibility: hidden;

	transition: $drawer-overlay-transition;

	z-index: $drawer-overlay-z-index;
}

.night .drawer-overlay {
	background-color: $night-drawer-overlay-background-color;
}

.drawer-toggle {
	opacity: 0;
	position: absolute;
	z-index: -1;

	&:checked {
		~ .drawer {
			// opacity: 1;
			// visibility: visible;
		}

		~ .drawer-overlay {
			display: block;

			opacity: 0.5;
			visibility: visible;
		}
	}
}

.drawer-toggle--top:checked {
	~ .drawer--top {
		margin-top: 0;
		
		& ~ .drawer-outside {
			margin-top: $drawer-height;
		}
	}
}

.drawer-toggle--right:checked {
	~ .drawer--right {
		margin-right: 0;
		
		& ~ .drawer-outside {
			margin-right: $drawer-width;
		}
	}
}

.drawer-toggle--bottom:checked {
	~ .drawer--bottom {
		margin-bottom: 0;
		
		& ~ .drawer-outside {
			margin-bottom: $drawer-height;
		}
	}
}

.drawer-toggle--left:checked {
	~ .drawer--left {
		margin-left: 0;
		
		& ~ .drawer-outside {
			margin-left: $drawer-width;
		}
	}
}

.open {
	&.drawer {
		// opacity: 1;
		// visibility: visible;
	}

	&.drawer--top {
		margin-top: 0;
		
		& ~ .drawer-outside {
			margin-top: $drawer-height;
		}
	}

	&.drawer--right {
		margin-right: 0;
		
		& ~ .drawer-outside {
			margin-right: $drawer-width;
		}
	}

	&.drawer--bottom {
		margin-bottom: 0;
		
		& ~ .drawer-outside {
			margin-bottom: $drawer-height;
		}
	}

	&.drawer--left {
		margin-left: 0;
		
		& ~ .drawer-outside {
			margin-left: $drawer-width;
		}
	}
}

/**
 * Drawer with push:
 * `.drawer--push`
 *
 *     @example
 *     div.drawer-wrapper
 *         input(type='checkbox', id='eg-drawer-with-push-top').drawer-toggle.drawer-toggle--top
 *         input(type='checkbox', id='eg-drawer-with-push-right').drawer-toggle.drawer-toggle--right
 *         input(type='checkbox', id='eg-drawer-with-push-bottom').drawer-toggle.drawer-toggle--bottom
 *         input(type='checkbox', id='eg-drawer-with-push-left').drawer-toggle.drawer-toggle--left
 *         div.doc-drawer.drawer.drawer--top.drawer--push
 *             div
 *                 label(for='eg-drawer-with-push-top').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--right.drawer--push
 *             div
 *                 label(for='eg-drawer-with-push-right').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--bottom.drawer--push
 *             div
 *                 label(for='eg-drawer-with-push-bottom').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--left.drawer--push
 *             div
 *                 label(for='eg-drawer-with-push-left').btn.btn--link Close
 *         div.doc-drawer-overlay.drawer-overlay
 *         div.doc-drawer-outside.drawer-outside
 *             div.txt-center
 *                 div.btn-group
 *                     label(for='eg-drawer-with-push-top').btn.btn--secondary Top
 *                     label(for='eg-drawer-with-push-right').btn.btn--secondary Right
 *                     label(for='eg-drawer-with-push-bottom').btn.btn--secondary Bottom
 *                     label(for='eg-drawer-with-push-left').btn.btn--secondary Left
 */
.drawer--push {
	will-change: transform;

	&.drawer--top {
		margin-top: 0;
		transform: translateY(-#{$drawer-height});
	}

	&.drawer--right {
		margin-right: 0;
		transform: translateX($drawer-width);
	}

	&.drawer--bottom {
		margin-bottom: 0;
		transform: translateY($drawer-height);
	}

	&.drawer--left {
		margin-left: 0;
		transform: translateX(-#{$drawer-width});
	}
}

.drawer--push,
.drawer--push ~ .drawer-outside {
	transition: $drawer-push-outside-transition;
}

.drawer-toggle:checked {
	~ .drawer--push ~ .drawer-outside {
		margin: 0;
	}
}

.drawer-toggle--top:checked {
	~ .drawer--push {
		&.drawer--top {
			transform: translate(0, 0);
			
			& ~ .drawer-outside {
				transform: translateY($drawer-height);
			}
		}

		&.drawer--right {
			transform: translateX($drawer-width);
		}

		&.drawer--bottom {
			transform: translateY($drawer-height);
		}

		&.drawer--left {
			transform: translateX(-#{$drawer-width});
		}
	}
}

.drawer-toggle--right:checked {
	~ .drawer--push {
		&.drawer--top {
			transform: translateY(-#{$drawer-height});
		}

		&.drawer--right {
			transform: translate(0, 0);
			
			& ~ .drawer-outside {
				transform: translateX(-#{$drawer-width});
			}
		}

		&.drawer--bottom {
			transform: translateY($drawer-height);
		}

		&.drawer--left {
			transform: translateX(-#{$drawer-width});
		}
	}
}

.drawer-toggle--bottom:checked {
	~ .drawer--push {
		&.drawer--top {
			transform: translateY(-#{$drawer-height});
		}

		&.drawer--right {
			transform: translateX($drawer-width);
		}

		&.drawer--bottom {
			transform: translate(0, 0);
			
			& ~ .drawer-outside {
				transform: translateY(-#{$drawer-height});
			}
		}

		&.drawer--left {
			transform: translateX(-#{$drawer-width});
		}
	}
}

.drawer-toggle--left:checked {
	~ .drawer--push {
		&.drawer--top {
			transform: translateY(-#{$drawer-height});
		}

		&.drawer--right {
			transform: translateX($drawer-width);
		}

		&.drawer--bottom {
			transform: translateY($drawer-height);
		}

		&.drawer--left {
			transform: translate(0, 0);
			
			& ~ .drawer-outside {
				transform: translateX($drawer-width);
			}
		}
	}
}

.open {
	&.drawer--push {
		transform: translate(0, 0);

		&.drawer--top {
			& ~ .drawer-outside {
				transform: translateY($drawer-height);
			}
		}

		&.drawer--right {
			& ~ .drawer-outside {
				transform: translateX(-#{$drawer-width});
			}
		}

		&.drawer--bottom {
			& ~ .drawer-outside {
				transform: translateY(-#{$drawer-height});
			}
		}

		&.drawer--left {
			& ~ .drawer-outside {
				transform: translateX($drawer-width);
			}
		}

		& ~ .drawer-outside {
			margin: 0;
		}
	}
}

.close {
	&.drawer--push {
		&.drawer--top {
			transform: translateY(-#{$drawer-height});
		}

		&.drawer--right {
			transform: translateX($drawer-width);
		}

		&.drawer--bottom {
			transform: translateY($drawer-height);
		}

		&.drawer--left {
			transform: translateX(-#{$drawer-width});
		}
	}
}

/**
 * Drawer with overlap:
 * `.drawer--overlap`
 *
 *     @example
 *     div.drawer-wrapper
 *         input(type='checkbox', id='eg-drawer-with-overlap-top').drawer-toggle.drawer-toggle--top
 *         input(type='checkbox', id='eg-drawer-with-overlap-right').drawer-toggle.drawer-toggle--right
 *         input(type='checkbox', id='eg-drawer-with-overlap-bottom').drawer-toggle.drawer-toggle--bottom
 *         input(type='checkbox', id='eg-drawer-with-overlap-left').drawer-toggle.drawer-toggle--left
 *         div.doc-drawer.drawer.drawer--top.drawer--overlap
 *             div
 *                 label(for='eg-drawer-with-overlap-top').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--right.drawer--overlap
 *             div
 *                 label(for='eg-drawer-with-overlap-right').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--bottom.drawer--overlap
 *             div
 *                 label(for='eg-drawer-with-overlap-bottom').btn.btn--link Close
 *         div.doc-drawer.drawer.drawer--left.drawer--overlap
 *             div
 *                 label(for='eg-drawer-with-overlap-left').btn.btn--link Close
 *         div.doc-drawer-overlay.drawer-overlay
 *         div.doc-drawer-outside.drawer-outside
 *             div.txt-center
 *                 div.btn-group
 *                     label(for='eg-drawer-with-overlap-top').btn.btn--secondary Top
 *                     label(for='eg-drawer-with-overlap-right').btn.btn--secondary Right
 *                     label(for='eg-drawer-with-overlap-bottom').btn.btn--secondary Bottom
 *                     label(for='eg-drawer-with-overlap-left').btn.btn--secondary Left
 */
.drawer-toggle:checked {
	~ .drawer--overlap ~ .drawer-outside {
		margin: 0;
	}
}

.open {
	&.drawer--overlap ~ .drawer-outside {
		margin: 0;
	}
}
