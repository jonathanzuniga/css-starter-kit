
@import '../partials/_all';


/***
 * Button:
 */

.btn {
	border-width: $button-border-width;
	border-style: $button-border-style;
	border-color: $button-border-color;
	border-radius: $button-border-radius;
	box-shadow: none;
	display: inline-block;
	font-size: $button-font-size;
	font-weight: $button-font-weight;
	line-height: $button-line-height;
	padding: $button-padding-y $button-padding-x;
	text-align: center;
	transition: $button-transition;
	vertical-align: middle;
	white-space: nowrap;

	-moz-appearance: none;
	-webkit-appearance: none;

	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

	&:link {
		text-decoration: none;
	}
}

@each $name, $background-color, $night-background-color, $text-color, $night-text-color, $state-light-color in $buttons {

	$name_ucf: str_ucfirst( $name );
	$name_r: str_replace( to_lower_case( $name ), ' ', '-' );

	/**
	 * #{ $name_ucf } button:
	 * `.btn--#{ $name_r }`
	 *
	 *     @example
	 *     button.btn.btn--#{ $name_r } Button
     *     button.btn.btn--#{ $name_r }.btn--outline Outline button
	 */

	.btn--#{ $name_r } {
		background-color: $background-color;
		border-color: $button-border-color;
		color: $text-color;

		&:link,
		&:visited {
			color: $text-color;
		}

		&:hover {
			@if not ($state-light-color == '') {

				background-color:
					tint(
						$background-color,
						$button-hover-bg-color-amount
					);

			} @else {

				background-color:
					shade(
						$background-color,
						$button-hover-bg-color-amount
					);
			}

			color: $text-color;
		}

		&:active,
		&.active {
			@if not ( $state-light-color == '' ) {

				background-color:
					tint(
						$background-color,
						$button-active-bg-color-amount
					);

			} @else {

				background-color:
					shade(
						$background-color,
						$button-active-bg-color-amount
					);

			}

			color: $text-color;
		}
	}

	.night .btn--#{ $name_r } {
		background-color: $night-background-color;
		color: $night-text-color;

		&:hover {
			@if not ( $state-light-color == '' ) {

				background-color:
					tint(
						$night-background-color,
						$button-hover-bg-color-amount
					);

			} @else {

				background-color:
					shade(
						$night-background-color,
						$button-hover-bg-color-amount
					);

			}

			color: $night-text-color;
		}

		&:active,
		&.active {
			@if not ( $state-light-color == '' ) {

				background-color:
					tint(
						$night-background-color,
						$button-active-bg-color-amount
					);

			} @else {

				background-color:
					shade(
						$night-background-color,
						$button-active-bg-color-amount
					);

			}

			color: $night-text-color;
		}
	}

	.btn--outline {
		background-color: transparent;

		&.btn--#{ $name_r } {
			border-color:
				transparentize(
					$background-color,
					$button-outline-border-transparentize-amount
				);

			color: $background-color;

			&:link,
			&:visited {
				color: $background-color;
			}

			&:hover {
				@if not ( $state-light-color == '' ) {

					background-color:
						tint(
							$background-color,
							$button-hover-bg-color-amount
						);

				} @else {

					background-color:
						shade(
							$background-color,
							$button-hover-bg-color-amount
						);

				}

				border-color:
					transparentize(
						$background-color,
						$button-outline-border-transparentize-amount
					);

				color: $text-color;
			}

			&:active,
			&.active {
				@if not ( $state-light-color == '' ) {

					background-color:
						tint(
							$background-color,
							$button-active-bg-color-amount
						);
					border-color: transparentize(
						tint(
							$background-color,
							$button-active-bg-color-amount
						),
						$button-outline-border-transparentize-amount
					);

				} @else {

					background-color:
						shade(
							$background-color,
							$button-active-bg-color-amount
						);
					border-color: transparentize(
						shade(
							$background-color,
							$button-active-bg-color-amount
						),
						$button-outline-border-transparentize-amount
					);

				}

				color: $text-color;
			}
		}
	}

	.night .btn--outline {
		background-color: transparent;

		&.btn--#{ $name_r } {
			border-color:
				transparentize(
					$night-background-color,
					$button-outline-border-transparentize-amount
				);
			color: $night-background-color;

			&:link,
			&:visited {
				color: $night-background-color;
			}

			&:hover {
				@if not ( $state-light-color == '' ) {

					background-color:
						tint(
							$night-background-color,
							$button-hover-bg-color-amount
						);

				} @else {

					background-color:
						shade(
							$night-background-color,
							$button-hover-bg-color-amount
						);

				}

				border-color:
					transparentize(
						$night-background-color,
						$button-outline-border-transparentize-amount
					);

				color: $night-text-color;
			}

			&:active,
			&.active {
				@if not ( $state-light-color == '' ) {

					background-color:
						tint(
							$night-background-color,
							$button-active-bg-color-amount
						);
					border-color: transparentize(
						tint(
							$night-background-color,
							$button-active-bg-color-amount
						),
						$button-outline-border-transparentize-amount
					);

				} @else {

					background-color:
						shade(
							$night-background-color,
							$button-active-bg-color-amount
						);
					border-color: transparentize(
						shade(
							$night-background-color,
							$button-active-bg-color-amount
						),
						$button-outline-border-transparentize-amount
					);

				}

				color: $night-text-color;
			}
		}
	}

	.btn-group--toggle,
	.btn-group--toggle [type='checkbox'],
	.btn-group--toggle [type='radio'] {
		opacity: 0;
		position: absolute;
		z-index: -1;

		&:checked + .btn--#{ $name_r } {
			@extend .btn--#{ $name_r }.active;
		}
	}
}

/**
 * Link button:
 * `.btn--link`
 *
 *     @example
 *     button.btn.btn--link Link button
 */

.btn--link {
	background-color: transparent;
	border-color: transparent;

	color: $day__a-color;

	cursor: pointer;

	&:link {
		text-decoration: $a-text-decoration;
	}

	&:link,
	&:visited {
		color: $day__a-color;
	}

	&:visited {
		text-decoration: $a-visited-text-decoration;
	}

	&:hover {
		background-color: $day__button-link-hover-bg-color;
		color: $day__a-hover-color;
		text-decoration: $a-hover-text-decoration;
	}

	&:active,
	&.active {
		color: $day__a-hover-color;
	}
}

.night .btn--link {
	background-color: transparent;
	color: $ngt__a-color;

	&:link,
	&:visited {
		color: $ngt__a-color;
	}

	&:hover {
		background-color: $ngt__button-link-hover-bg-color;
		color: $ngt__a-hover-color;
	}

	&:active,
	&.active {
		color: $ngt__a-hover-color;
	}
}

/**
 * Button size:
 * `.btn--sm` `.btn--lg`
 *
 *     @example
 *     button.btn.btn--primary.btn--sm Small button
 *     button.btn.btn--primary.btn--lg Large button
 */

.btn--sm {
	border-radius: $button-sm-border-radius;
	font-size: $button-sm-font-size;
	padding: $button-sm-padding-y $button-sm-padding-x;
}

.btn--lg {
	border-radius: $button-lg-border-radius;
	font-size: $button-lg-font-size;
	padding: $button-lg-padding-y $button-lg-padding-x;
}

/**
 * Pill button:
 * `.btn--pill`
 *
 *     @example
 *     button.btn.btn--primary.btn--pill Pill button
 */

.btn--pill {
	border-radius: 2em;
}

/**
 * Expanded button:
 * `.btn--expanded`
 *
 *     @example
 *     button.btn.btn--primary.btn--lg.btn--expanded Expanded button
 */

.btn--expanded {
	display: block;
	width: 100%;
}

/**
 * Active button:
 * `.active`
 *
 *     @example
 *     button.btn.btn--primary.active Active button
 */

/**
 * Disabled button:
 * `.btn--disabled` `disabled`
 *
 *     @example
 *     button.btn.btn--primary.btn--disabled Disabled button
 *     button(disabled).btn.btn--primary Disabled button
 */

.btn {
	&[disabled],
	&--disabled {
		opacity: $button-disabled-opacity;
		pointer-events: none;

		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	}
}
