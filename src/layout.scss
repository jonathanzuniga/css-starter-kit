@import '_functions';
@import '_variables';

/* ========================================================================== */

* {
	box-sizing: border-box;
}

html, body {
	margin: 0;
	padding: 0;
}

.container {
	margin-left: auto;
	margin-right: auto;
	max-width: $container-max-width;
}

// @media screen and (min-width: 768px) {
// 	.container {
// 		padding-left: 16px;
// 		padding-right: 16px;
// 	}
// }

/* ========================================================================== */

.row {
	display: flex;
	flex-wrap: wrap;
	margin-bottom: $grid-row-margin-bottom;
	margin-top: $grid-row-margin-top;

	.row {
		margin-left: -$grid-column-gutter;
		margin-right: -$grid-column-gutter;
	}
}

@mixin column {
	flex-basis: 0;
	flex-grow: 1;
	max-width: 100%;
	width: 100%;
}

@mixin gutter {
	padding-left: $grid-column-gutter;
	padding-right: $grid-column-gutter;
}

%column {
	@include column;
	@include gutter;
}

.col,
[class*="col-xs-"],
[class*="col-sm-"],
[class*="col-md-"],
[class*="col-lg-"],
[class*="col-xl-"] {
	@extend %column;
}

/***
 * Flex grid:
 */

/**
 * Rows and columns:
 * Remember, wrap any of the `.col*` classes inside of a `.row` class.
 *
 *     @example
 *     div.row
 *         div.col
 *             div.bgc-secondary-2 &nbsp
 *         div.col
 *             div.bgc-secondary-2 &nbsp
 *     div.row
 *         div.col
 *             div.bgc-secondary-2 &nbsp
 *         div.col
 *             div.bgc-secondary-2 &nbsp
 *         div.col
 *             div.bgc-secondary-2 &nbsp
 *         div.col
 *             div.bgc-secondary-2 &nbsp
 */
@for $i from 1 through $grid-columns-number {
	.col-#{$i} {
		@extend %column;

		$column-width: percentage($i / $grid-columns-number);
		flex-basis: $column-width;
		max-width: $column-width;
	}
}

/* ========================================================================== */

/***
 * Responsive classes:
 */

 /**
 * Columns:
 * Resize the window to see how grid columns behave on the different breakpoints.
 *
 *     @example
 *     div.row
 *         div.col-xs-6
 *             div.bgc-secondary-2 &nbsp
 *         div.col-xs-6
 *             div.bgc-secondary-3 &nbsp
 *     div.row
 *         div.col-sm-6.col-md-8
 *             div.bgc-secondary-2 &nbsp
 *         div.col-sm-6.col-md-4
 *             div.bgc-secondary-3 &nbsp
 *     div.row
 *         div.col-xs-12.col-sm-3.col-md-5.col-lg-7.col-xl-9
 *             div.bgc-secondary-2 &nbsp
 *         div.col-xs-12.col-sm-9.col-md-7.col-lg-5.col-xl-3
 *             div.bgc-secondary-3 &nbsp
 */
@media (min-width: $breakpoint-xs-min-width) {
	@for $i from 1 through $grid-columns-number {
		.col-xs-#{$i} {
			$column-width: percentage($i / $grid-columns-number);
			flex-basis: $column-width;
			max-width: $column-width;
		}
	}
}

@media (min-width: $breakpoint-sm-min-width) {
	@for $i from 1 through $grid-columns-number {
		.col-sm-#{$i} {
			$column-width: percentage($i / $grid-columns-number);
			flex-basis: $column-width;
			max-width: $column-width;
		}
	}
}

@media (min-width: $breakpoint-md-min-width) {
	@for $i from 1 through $grid-columns-number {
		.col-md-#{$i} {
			$column-width: percentage($i / $grid-columns-number);
			flex-basis: $column-width;
			max-width: $column-width;
		}
	}
}

@media (min-width: $breakpoint-lg-min-width) {
	@for $i from 1 through $grid-columns-number {
		.col-lg-#{$i} {
			$column-width: percentage($i / $grid-columns-number);
			flex-basis: $column-width;
			max-width: $column-width;
		}
	}
}

@media (min-width: $breakpoint-xl-min-width) {
	@for $i from 1 through $grid-columns-number {
		.col-xl-#{$i} {
			$column-width: percentage($i / $grid-columns-number);
			flex-basis: $column-width;
			max-width: $column-width;
		}
	}
}

/* ========================================================================== */

/***
 * Horizontal modifiers:
 */

/**
 * Aligns columns to left:
 * `.cols-left`
 *
 *     @example
 *     div.row.cols-left
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-left {
	justify-content: flex-start;
}

/**
 * Aligns columns to center:
 * `.cols-center`
 *
 *     @example
 *     div.row.cols-center
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-center {
	justify-content: center;
}

/**
 * Aligns columns to right:
 * `.cols-right`
 *
 *     @example
 *     div.row.cols-right
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-right {
	justify-content: flex-end;
}

/**
 * Space between columns:
 * `.cols-between`
 *
 *     @example
 *     div.row.cols-between
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-between {
	justify-content: space-between;
}

/**
 * Space around columns:
 * `.cols-around`
 *
 *     @example
 *     div.row.cols-around
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-around {
	justify-content: space-around;
}

/***
 * Vertical modifiers:
 */

/**
 * Aligns columns to top:
 * `.cols-top`
 *
 *     @example
 *     div.row.cols-top.h-100px
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-top {
	align-items: flex-start;
}

/**
 * Aligns columns to middle:
 * `.cols-middle`
 *
 *     @example
 *     div.row.cols-middle.h-100px
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-middle {
	align-items: center;
}

/**
 * Aligns columns to bottom:
 * `.cols-bottom`
 *
 *     @example
 *     div.row.cols-bottom.h-100px
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-bottom {
	align-items: flex-end;
}

/**
 * Aligns column to top:
 * `.col-top`
 *
 *     @example
 *     div.row.cols-bottom.h-100px
 *         div.col-4.col-top
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.col-top {
	align-self: flex-start;
}

/**
 * Aligns column to middle:
 * `.col-middle`
 *
 *     @example
 *     div.row.h-100px
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4.col-middle
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.col-middle {
	align-self: center;
}

/**
 * Aligns column to bottom:
 * `.col-middle`
 *
 *     @example
 *     div.row.h-100px
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4.col-bottom
 *             div.bgc-secondary-2 &nbsp
 */
.col-bottom {
	align-self: flex-end;
}

/* ========================================================================== */

/***
 * Offsets:
 */

@media (min-width: $breakpoint-xs-min-width) {
	@for $i from 0 through ($grid-columns-number - 1) {
		.col-os-xs-#{$i} {
			margin-left: percentage($i / $grid-columns-number);
		}
	}
}

@media (min-width: $breakpoint-sm-min-width) {
	@for $i from 0 through ($grid-columns-number - 1) {
		.col-os-sm-#{$i} {
			margin-left: percentage($i / $grid-columns-number);
		}
	}
}

@media (min-width: $breakpoint-md-min-width) {
	@for $i from 0 through ($grid-columns-number - 1) {
		.col-os-md-#{$i} {
			margin-left: percentage($i / $grid-columns-number);
		}
	}
}

@media (min-width: $breakpoint-lg-min-width) {
	@for $i from 0 through ($grid-columns-number - 1) {
		.col-os-lg-#{$i} {
			margin-left: percentage($i / $grid-columns-number);
		}
	}
}

@media (min-width: $breakpoint-xl-min-width) {
	@for $i from 0 through ($grid-columns-number - 1) {
		.col-os-xl-#{$i} {
			margin-left: percentage($i / $grid-columns-number);
		}
	}
}

/* ========================================================================== */

/***
 * Gutters:
 */

/**
 * Small gutters:
 * `.cols-gutter-sm`
 *
 *     @example
 *     div.row.cols-gutter-sm
 *         div.col-8
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-2 &nbsp
 */
.cols-gutter-sm {
	&.row {
		margin-left: -$grid-column-gutter / 2;
		margin-right: -$grid-column-gutter / 2;
	}

	[class^="col"] {
		padding-left: $grid-column-gutter / 2;
		padding-right: $grid-column-gutter / 2;
	}
}

/**
 * Remove gutters:
 * `.cols-gutter-0`
 *
 *     @example
 *     div.row.cols-gutter-0
 *         div.col-8
 *             div.bgc-secondary-2 &nbsp
 *         div.col-4
 *             div.bgc-secondary-3 &nbsp
 */
.cols-gutter-0 {
	&.row {
		margin-left: 0;
		margin-right: 0;
	}

	[class^="col"] {
		padding-left: 0;
		padding-right: 0;
	}
}
