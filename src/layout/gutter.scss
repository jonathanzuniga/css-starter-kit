
@import '../partials/_all';


/***
 * Gutter:
 */

@each $key, $width in $gutters {

	/**
	 * Gutters width #{ $width }:
	 * `.gutters-#{ $key }` `.[size]-gutters-#{ $key }` `.max[size]-gutters-#{ $key }`
	 *
	 *     @example
	 *     div.cntr.cntr--fluid
	 *         div.row.gutters-#{ $key }.c-light-20.ta-center.bgc-success-20.p-y-1
	 *             div.col-6
	 *                 div.bgc-success-40.p-1 6
	 *             div.col-6
	 *                 div.bgc-success-40.p-1 6
	 */

	.gutters-#{ $key } {
		// margin-right: -#{ $width };
		// margin-left: -#{ $width };

		&.row {
			> .col,
			> [class*='col-'] {
				padding-right: $width;
				padding-left: $width;
			}
		}
	}

	// Grid gap.

	.gap-#{ $key } {
		&[class*='gcols-'] {
			grid-gap: $width;
		}
	}
}

@each $size, $length in $grid-breakpoints {

	@media ( min-width: $length ) {

		@each $key, $width in $gutters {

			.#{ $size }-gutters-#{ $key } {
				// margin-right: -#{ $width };
				// margin-left: -#{ $width };

				&.row {
					> .col,
					> [class*='col-'] {
						padding-right: $width;
						padding-left: $width;
					}
				}

				// Para la división del contenido en cols.

				@for $i from 1 through $grid-columns {

					&.#{ $size }-cols-#{ $key } {
						column-gap: $width;
					}

				}
			}

			// Grid gap.

			.#{ $size }-gap-#{ $key } {
				&[class*='gcols-'] {
					grid-gap: $width;
				}
			}
		}
	}

	@media ( max-width: $length - 1 ) {

		@each $key, $width in $gutters {

			.max#{ $size }-gutters-#{ $key } {
				// margin-right: -#{ $width };
				// margin-left: -#{ $width };

				&.row {
					> .col,
					> [class*='col-'] {
						padding-right: $width;
						padding-left: $width;
					}
				}

				// Para la división del contenido en cols.

				@for $i from 1 through $grid-columns {

					&.#{ $size }-cols-#{ $key } {
						column-gap: $width;
					}

				}
			}

			// Grid gap.

			.max#{ $size }-gap-#{ $key } {
				&[class*='gcols-'] {
					grid-gap: $width;
				}
			}

		}

	}

}
