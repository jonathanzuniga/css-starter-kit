@import '../partials/_all';


/***
 * Gutter:
 */

@for $i from 0 through $gutters {
	/**
	 * Gutters width #{$gutter * $i}:
	 * `.gutters-#{$i}`
	 *
	 *     @example
	 *     div.cols.gutters-#{$i}
	 *         div.col-8
	 *             div.bgc-green-10 &nbsp;
	 *         div.col-4
	 *             div.bgc-green-10 &nbsp;
	 */
	.gutters-#{$i} {
		margin-right: -#{$gutter * $i};
		margin-left: -#{$gutter * $i};

		&.cols {
			> .col,
			> [class*='col-'] {
				padding-right: $gutter * $i;
				padding-left: $gutter * $i;
			}
		}
	}

	// Grid gap.
	.gap-#{$i} {
		&[class*='gcols-'] {
			grid-gap: $gutter * $i;
		}
	}
}

@each $size, $length in $grid-breakpoints {
	@media (min-width: $length) {
		@for $i from 0 through $gutters {
			.#{$size}-gutters-#{$i} {
				margin-right: -#{$gutter * $i};
				margin-left: -#{$gutter * $i};

				&.cols {
					> .col,
					> [class*='col-'] {
						padding-right: $gutter * $i;
						padding-left: $gutter * $i;
					}
				}

				// Para la divisi√≥n del contenido en cols.
				@for $i from 1 through $grid-columns {
					&.#{$size}-cols-#{$i} {
						column-gap: $gutter * $i;
					}
				}
			}

			// Grid gap.
			.#{$size}-gap-#{$i} {
				&[class*='gcols-'] {
					grid-gap: $gutter * $i;
				}
			}
		}
	}

	@media (max-width: $length - 1) {
		@for $i from 0 through $gutters {
			// Grid gap.
			.max#{$size}-gap-#{$i} {
				&[class*='gcols-'] {
					grid-gap: $gutter * $i;
				}
			}
		}
	}
}

/**
 * Responsive gutters:
 * `.[size]-gutters-[width]` `.max[size]-gutters-[width]`
 *
 *     @example
 *     div.cols.md-gutters-0
 *         div.col-8
 *             div.bgc-green-10 &nbsp;
 *         div.col-4
 *             div.bgc-green-20 &nbsp;
 */
