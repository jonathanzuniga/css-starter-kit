@import '../partials/_all';


/***
 * Flex grid:
 */

html, body {
	margin: 0;
	padding: 0;
}

.cols {
	display: flex;
	flex-wrap: wrap;

	margin-right: -#{$gutter-width};
	margin-left: -#{$gutter-width};
}

@mixin column {
	flex-basis: 0;
	flex-grow: 1;
	width: 100%;
}

@mixin gutter {
	padding-right: $gutter-width;
	padding-left: $gutter-width;
}

%column {
	@include column;
	@include gutter;
}

.col {
	@extend %column;
}

@each $size, $length in $grid-breakpoints {
	@for $i from 1 through $grid-columns {
		.col-#{$i},
		.#{$size}-col-#{$i} {
			@extend %column;
		}
	}
}

/**
 * Container:
 * `.container` have a max. width of #{$container-max-width}.
 *
 *     @example
 *     div.container.bd-1.p-y-16
 *         div.cols
 *             div.col
 *                 div.bgc-teal-10 &nbsp;
 *             div.col
 *                 div.bgc-teal-10 &nbsp;
 */
.container {
	@extend .container-fluid;
	max-width: $container-max-width;
}

/**
 * Fluid container:
 * `.container-fluid`
 *
 *     @example
 *     div.container-fluid.bd-1.p-y-16
 *         div.cols
 *             div.col
 *                 div.bgc-teal-10 &nbsp;
 *             div.col
 *                 div.bgc-teal-10 &nbsp;
 */
.container-fluid {
	@include gutter;

	margin-left: auto;
	margin-right: auto;
	width: 100%;
}

/**
 * Columns:
 * Remember, wrap any of the `.*col*` classes inside of a `.cols` class.
 *
 *     @example
 *     div.cols
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *     div.cols.m-top-16
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 */
@for $i from 1 through $grid-columns {
	.col-#{$i} {
		$column-width: percentage($i / $grid-columns);
		flex-basis: $column-width;
		max-width: $column-width;
	}
}

/**
 * Responsive columns:
 * Resize the window to see how grid columns behave on the different breakpoints.
 *
 *     @example
 *     div.cols
 *         div.xs-col-6
 *             div.bgc-teal-10 &nbsp;
 *         div.xs-col-6
 *             div.bgc-teal-10 &nbsp;
 *     div.cols.m-top-16
 *         div.sm-col-6.md-col-8
 *             div.bgc-teal-10 &nbsp;
 *         div.sm-col-6.md-col-4
 *             div.bgc-teal-10 &nbsp;
 *     div.cols.m-top-16
 *         div.xs-col-12.sm-col-3.md-col-5.lg-col-7.xl-col-9
 *             div.bgc-teal-10 &nbsp;
 *         div.xs-col-12.sm-col-9.md-col-7.lg-col-5.xl-col-3
 *             div.bgc-teal-10 &nbsp;
 */
// Si no se escriben los primeros tama√±os de una clase [size]-col-[#], que entonces sean 100% de ancho.
[class*='-col-'] {
	flex-basis: 100%;
	max-width: 100%;
}

@each $size, $length in $grid-breakpoints {
	@media (min-width: $length) {
		@for $i from 1 through $grid-columns {
			.#{$size}-col-#{$i} {
				$column-width: percentage($i / $grid-columns);
				flex-basis: $column-width;
				max-width: $column-width;
			}
		}
	}
}
