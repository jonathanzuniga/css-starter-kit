@import '../partials/_all';


/***
 * Flex grid:
 */

.row {
	display: flex;
	flex-wrap: wrap;

	margin-right: -#{ $gutter-width };
	margin-left: -#{ $gutter-width };
}

@mixin column {
	flex-basis: 0;
	flex-grow: 1;
	width: 100%;
}

@mixin gutter {
	padding-right: $gutter-width;
	padding-left: $gutter-width;
}

%column {
	@include column;
	@include gutter;
}

.col {
	@extend %column;
}

@each $size, $length in $grid-breakpoints {

	@for $i from 1 through $grid-columns {

		.col-#{ $i },
		.#{ $size }-col-#{ $i } {
			@extend %column;
		}

	}

}

/**
 * Container:
 * `.cntr` have a max. width of #{ $container-max-width }.
 *
 *     @example
 *     div.cntr.bd-1.p-y-1
 *         div.row
 *             div.col
 *                 div.bgc-teal-10 &nbsp;
 *             div.col
 *                 div.bgc-teal-10 &nbsp;
 */
.cntr {
	@extend .cntr-fluid;
	max-width: $container-max-width;
}

/**
 * Fluid container:
 * `.cntr-fluid`
 *
 *     @example
 *     div.cntr-fluid.bd-1.p-y-1
 *         div.row
 *             div.col
 *                 div.bgc-teal-10 &nbsp;
 *             div.col
 *                 div.bgc-teal-10 &nbsp;
 */
.cntr-fluid {
	@include gutter;

	margin-left: auto;
	margin-right: auto;
	width: 100%;
}

/**
 * Columns:
 * Remember, wrap any of the `.*col*` classes inside of a `.row` class.
 *
 *     @example
 *     div.row
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *     div.row.m-top-1
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 *         div.col
 *             div.bgc-teal-10 &nbsp;
 */
@for $i from 1 through $grid-columns {

	.col-#{ $i } {
		$column-width: percentage( $i / $grid-columns );
		flex-basis: $column-width;
		max-width: $column-width;
	}

}

/**
 * Responsive columns:
 * Resize the window to see how grid columns behave on the different breakpoints.
 *
 *     @example
 *     div.row
 *         div.xs-col-6
 *             div.bgc-teal-10 &nbsp;
 *         div.xs-col-6
 *             div.bgc-teal-10 &nbsp;
 *     div.row.m-top-1
 *         div.sm-col-6.md-col-8
 *             div.bgc-teal-10 &nbsp;
 *         div.sm-col-6.md-col-4
 *             div.bgc-teal-10 &nbsp;
 *     div.row.m-top-1
 *         div.xs-col-12.sm-col-3.md-col-5.lg-col-7.xl-col-9
 *             div.bgc-teal-10 &nbsp;
 *         div.xs-col-12.sm-col-9.md-col-7.lg-col-5.xl-col-3
 *             div.bgc-teal-10 &nbsp;
 */
// Si no se escriben los primeros tama√±os de una clase [size]-col-[#], que entonces sean 100% de ancho.
[class*='-col-'] {
	flex-basis: 100%;
	max-width: 100%;
}

@each $size, $length in $grid-breakpoints {

	@media ( min-width: $length ) {

		@for $i from 1 through $grid-columns {
			
			.#{ $size }-col-#{ $i } {
				$column-width: percentage( $i / $grid-columns );
				flex-basis: $column-width;
				max-width: $column-width;
			}

		}

	}

}

/**
 * Nested columns:
 *
 *     @example
 *     div.row.c-teal-60.ta-center
 *         div.col
 *             div.bgc-teal-10 Level 1
 *             div.row
 *                 div.col
 *                     div.bgc-teal-20 Level 2
 *                     div.row
 *                         div.col
 *                             div.bgc-teal-10 Level 3
 *                         div.col
 *                             div.bgc-teal-10 Level 3
 *                         div.col
 *                             div.bgc-teal-10 Level 3
 *                 div.col
 *                     div.bgc-teal-20 Level 2
 *                     div.row
 *                         div.col
 *                             div.bgc-teal-10 Level 3
 *                         div.col
 *                             div.bgc-teal-10 Level 3
 *                         div.col
 *                             div.bgc-teal-10 Level 3
 */
