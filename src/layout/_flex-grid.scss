/***
 * Flex grid:
 */

* {
	box-sizing: border-box;
}

html, body {
	margin: 0;
	padding: 0;
}

.row {
	display: flex;
	flex-wrap: wrap;

	margin-top: $grid-row-margin-top;
	margin-right: -$grid-column-gutter;
	margin-bottom: $grid-row-margin-bottom;
	margin-left: -$grid-column-gutter;
}

@mixin column {
	flex-basis: 0;
	flex-grow: 1;
	max-width: 100%;
	width: 100%;
}

@mixin gutter {
	padding-left: $grid-column-gutter;
	padding-right: $grid-column-gutter;
}

%column {
	@include column;
	@include gutter;
}

.col,
[class*="col-"] {
	@extend %column;
}

/**
 * Container:
 * `.container`
 *
 *     @example
 *     div.container
 *         div.row
 *             div.col
 *                 div.bgc-grey-2 &nbsp;
 *             div.col
 *                 div.bgc-grey-2 &nbsp;
 */
.container {
	@extend .container-fluid;
	max-width: $container-max-width;
}

/**
 * Fluid container:
 * `.container-fluid`
 *
 *     @example
 *     div.container-fluid
 *         div.row
 *             div.col
 *                 div.bgc-grey-2 &nbsp;
 *             div.col
 *                 div.bgc-grey-2 &nbsp;
 */
.container-fluid {
	@include gutter;

	margin-left: auto;
	margin-right: auto;
	width: 100%;
}

/**
 * Rows and columns:
 * Remember, wrap any of the `.*col*` classes inside of a `.row` class.
 *
 *     @example
 *     div.row
 *         div.col
 *             div.bgc-grey-2 &nbsp;
 *         div.col
 *             div.bgc-grey-2 &nbsp;
 *     div.row
 *         div.col
 *             div.bgc-grey-2 &nbsp;
 *         div.col
 *             div.bgc-grey-2 &nbsp;
 *         div.col
 *             div.bgc-grey-2 &nbsp;
 *         div.col
 *             div.bgc-grey-2 &nbsp;
 */
@for $i from 1 through $grid-columns-number {
	.col-#{$i} {
		@extend %column;

		$column-width: percentage($i / $grid-columns-number);
		flex-basis: $column-width;
		max-width: $column-width;
	}
}

/**
 * Responsive columns:
 * Resize the window to see how grid columns behave on the different breakpoints.
 *
 *     @example
 *     div.row
 *         div.xs-col-6
 *             div.bgc-grey-2 &nbsp;
 *         div.xs-col-6
 *             div.bgc-grey-3 &nbsp;
 *     div.row
 *         div.sm-col-6.md-col-8
 *             div.bgc-grey-2 &nbsp;
 *         div.sm-col-6.md-col-4
 *             div.bgc-grey-3 &nbsp;
 *     div.row
 *         div.xs-col-12.sm-col-3.md-col-5.lg-col-7.xl-col-9
 *             div.bgc-grey-2 &nbsp;
 *         div.xs-col-12.sm-col-9.md-col-7.lg-col-5.xl-col-3
 *             div.bgc-grey-3 &nbsp;
 */
@each $size, $length in $grid-breakpoints {
	@media (min-width: $length) {
		@for $i from 1 through $grid-columns-number {
			.#{$size}-col-#{$i} {
				$column-width: percentage($i / $grid-columns-number);
				flex-basis: $column-width;
				max-width: $column-width;
			}
		}
	}
}
